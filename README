Author: Caleb Jhones
Version: 0.9
Goal:
    Create a command-line based utility to create decklists. Card names are
    validated through the scryfall.com API. You can also output plaintext or
    proxies with the appropriate command line flags.

Dependencies:
    The Python library 'requests' must be installed. This can easily be done
    with pip: `pip install requests`

Compilation & run instructions:
    >$ cd decklist-tool
    >$ python3 main.py

Usage:
    - Generally, follow the prompts on-screen.
    - Card names are accepted in the following format: `[n] {card name}`. If
        n is omitted, one copy of the card will be added to the deck. n cannot
        be greater than a format-specified number of cards, except, of course,
        for the six basic land types.
    - To quit the card-adding repl, type either QUIT or Q.
    - Split cards must have spaces around the '//'. For example, "Fire // Ice"
      will work, but "Fire//Ice" will not.
    - Options available:
        -s or --save saves the deck to a plaintext file
        -p or --print prints the deck to stdout
        -pdf or --proxies prints images of each card in the deck to a PDF
            ==> requires a network connection
            ==> requires pdflatex to be installed on your machine (and
                currently that your machine is Linux-based, but that hopefully
                will change soon)
        -v or --no-validation turns off automatic card checking
            ==> necessary if you don't have an internet connection
        -csv loads card data from a specified csv file
            the first argument to this option is the file path, and the second
            is the index at which the card name appears (zero-based). Currently,
            the index is not used.

Ideal use cycle:
    1. the user runs the utility
        - use flags (see above) to specify what type of output is desired
    2. specify the deck's name and format
    3. enter a repl, where the user enters card quantities and names
    4. when the user is done entering cards, generate the desired output format

Future Work:
    - fix '//' vs ' // '
    - better header for the PDF file? maybe?
    - card format legality validation
    - add the ability to read and old decklist from a file and edit it
    - add the ability to delineate a sideboard

